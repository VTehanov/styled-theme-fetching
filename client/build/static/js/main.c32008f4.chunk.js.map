{"version":3,"sources":["App.js","index.js"],"names":["StyledApp","styled","div","_templateObject","Button","button","_templateObject2","props","theme","main","secondary","Input","input","_templateObject3","App","react_default","a","createElement","Component","axios","get","then","result","ReactDOM","render","styled_components_browser_esm","data","src_App","document","getElementById"],"mappings":"grBAGA,IAAMA,EAAYC,IAAOC,IAAVC,KAKTC,EAASH,IAAOI,OAAVC,IAEU,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MACrB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,MAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,YAM1BC,EAAQV,IAAOW,MAAVC,KAiBIC,mLAVX,OACEC,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACN,EAAD,MACAI,EAAAC,EAAAC,cAACb,EAAD,6BANUc,aCGlBC,IAAMC,IAAN,qCACKC,KAAK,SAAAC,GACJC,IAASC,OACPT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAejB,MAAOc,EAAOI,MAC3BX,EAAAC,EAAAC,cAACU,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.c32008f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Button = styled.button`\n  padding: 0.6em;\n  border: 1px solid ${props => props.theme.main};\n  background-color: ${props => props.theme.main};\n  color: ${props => props.theme.secondary};\n  font-weight: 700;\n  font-size: 1.4em;\n  border-radius: 5em;\n`;\n\nconst Input = styled.input`\n  padding: 1em;\n  margin-bottom: 1em;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <StyledApp>\n        <h2>Choose a different theme:</h2>\n        <Input />\n        <Button>Change theme</Button>\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n","import axios from 'axios';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport App from './App';\n\n\n\nconst theme = {\n  main: 'purple',\n  secondary: 'yellow'\n}\n\n\n// const fetchTheme =  (themeId = 1) => {\n//   return axios.get(`http://localhost:5000/api/theme/${themeId}`)\n//     .then(result => {\n//       console.log(result.data);\n//       return result.data;\n//     });\n// }\n\n// const theme2 = fetchTheme();\n\n\naxios.get(`http://localhost:5000/api/theme/1`)\n    .then(result => {\n      ReactDOM.render(\n        <ThemeProvider theme={result.data}>\n          <App />\n        </ThemeProvider>,\n        document.getElementById('root')\n      );\n    });\n\n\n"],"sourceRoot":""}